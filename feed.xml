<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring开发者 - SpringDev.IO</title>
    <link>https://springdev.io</link>
    <atom:link href="https://springdev.io/feed.xml" rel="self" type="application/rss+xml" />
    <description>Spring开发者，是一个专为广大Spring开发者们提供Spring相关开源技术的开发工具、技术框架、业界资讯、博客文章、培训教程、活动交流等开源社交综合性服务网站。</description>
    <language>zh-CN</language>
    <pubDate>星期四, 19 七月 2018 17:51:11 +0800</pubDate>
    <lastBuildDate>星期四, 19 七月 2018 17:51:11 +0800</lastBuildDate>

    <item>
      <title>Spring一周回顾（2018年7月13日）</title>
      <link>https://springdev.io/blog/2018/07/this_week_in_spring_july_13th_2018.html</link>
      <pubDate>星期五, 13 七月 2018 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2018/07/this_week_in_spring_july_13th_2018.html</guid>
      <description>&amp;lt;div class=&amp;quot;quoteblock abstract&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
  概要
 &amp;lt;/div&amp;gt; 
 &amp;lt;blockquote&amp;gt;
   本文带你回顾最近一周有关Spring社区的一些有趣的事情。 
 &amp;lt;/blockquote&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://github.com/joshlong&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;“龙之春”龙大神&amp;lt;/a&amp;gt;每周一期必写的&amp;lt;a href=&amp;quot;https://spring.io/blog/2018/07/10/this-week-in-spring-july-10th-2018&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;This Week in Spring&amp;lt;/a&amp;gt;，相信国内外的Spring开发者都一定是必读的文章，而我就是其中一个忠实的粉丝。这篇文章不是原文对照翻译，而是摘取一部分再加上国内的热门文章，同时有我的理解和分析，毕竟这是一篇针对中国开发者而写的文章。&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;最近一段时间在写一本关于&amp;lt;a href=&amp;quot;https://spring.io/projects/spring-security&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Spring Security&amp;lt;/a&amp;gt;的新书，想着写的过程中先放一部分内容发到博客上，或许能对一部分碰巧遇到同类问题的开发者有所帮助，那也是好的。所以就想到采用&amp;lt;a href=&amp;quot;https://github.com/spring-io/sagan&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Sagan&amp;lt;/a&amp;gt;&amp;lt;sup class=&amp;quot;footnote&amp;quot;&amp;gt;[&amp;lt;a id=&amp;quot;_footnoteref_1&amp;quot; class=&amp;quot;footnote&amp;quot; href=&amp;quot;#_footnote_1&amp;quot; title=&amp;quot;View footnote.&amp;quot;&amp;gt;1&amp;lt;/a&amp;gt;]&amp;lt;/sup&amp;gt;的主题来搭建博客，Sagan的整个代码是采用&amp;lt;a href=&amp;quot;https://spring.io/projects/spring-boot&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Spring Boot&amp;lt;/a&amp;gt;来开发，但对我写个技术文章来讲就显得太复杂了，所以最后采用&amp;lt;a href=&amp;quot;https://jbake.org&amp;quot;&amp;gt;JBake&amp;lt;/a&amp;gt;&amp;lt;sup class=&amp;quot;footnote&amp;quot;&amp;gt;[&amp;lt;a id=&amp;quot;_footnoteref_2&amp;quot; class=&amp;quot;footnote&amp;quot; href=&amp;quot;#_footnote_2&amp;quot; title=&amp;quot;View footnote.&amp;quot;&amp;gt;2&amp;lt;/a&amp;gt;]&amp;lt;/sup&amp;gt;来构建博客，文章采用Markdown或者Asciidoc来编写，最后发布在&amp;lt;a href=&amp;quot;https://pages.github.com/&amp;quot;&amp;gt;Github Pages&amp;lt;/a&amp;gt;上，这样很快就搞定，最重要是能满足我对写作良好体验的要求。&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;好了，言归正传。一起来看看，本周Spring官方及开发社区发生了哪些新鲜事。&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
  首先来看看Spring官方团队给我们带来了
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://spring.io/blog/2018/07/05/spring-tool-suite-3-9-5-released&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Spring Tool Suite 3.9.5版本发布了&amp;lt;/a&amp;gt;，升级到&amp;lt;a href=&amp;quot;https://www.eclipse.org/photon/&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Eclipse Photon&amp;lt;/a&amp;gt;，这样就可以支持JDK 9/10，另外其他一些性能优化和问题修复。有关Eclipse Photon的新特性，请到&amp;lt;a href=&amp;quot;https://www.eclipse.org/photon/noteworthy/index.php&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;这里&amp;lt;/a&amp;gt;会有更详细的介绍。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Spring Cloud Data Flow &amp;lt;a href=&amp;quot;https://spring.io/blog/2018/07/05/spring-cloud-data-flow-1-6-m1-and-1-5-2-released&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;1.5.2发布&amp;lt;/a&amp;gt;，同时 &amp;lt;a href=&amp;quot;https://spring.io/blog/2018/07/12/spring-cloud-data-flow-1-6-m2-released&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;1.6 M2 也发布&amp;lt;/a&amp;gt;，1.6的亮点是任务调度原生集成到PCF。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://spring.io/blog/2018/07/12/spring-cloud-stream-elmhurst-sr1-released&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Spring Cloud Stream Elmhurst.SR1 发布了&amp;lt;/a&amp;gt;，这是一个维护性版本，Spring Boot默认使用2.0.3.RELEASE。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Spring Social的负责人&amp;lt;a href=&amp;quot;https://spring.io/team/cwalls&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Craig Walls&amp;lt;/a&amp;gt;在上周二正式决定&amp;lt;a href=&amp;quot;https://spring.io/blog/2018/07/03/spring-social-end-of-life-announcement&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Spring Social进入EOL&amp;lt;/a&amp;gt;，这包括其中的一些针对特定社交平台的API绑定实现项目，比如&amp;lt;code&amp;gt;Facebook&amp;lt;/code&amp;gt;、&amp;lt;code&amp;gt;Twitter&amp;lt;/code&amp;gt;、&amp;lt;code&amp;gt;LinkedIn&amp;lt;/code&amp;gt;等，因为其中的一些核心特性已经纳入到Spring Security 5了，在Spring Security 5中可以很好的扩展来实现达到相应的目的。接下来一年会继续提供问题修复和支持，但是不会发布新特性版本。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Spring背后公司的产品&amp;lt;a href=&amp;quot;https://content.pivotal.io/blog/how-pivotal-cloud-foundry-2-2-helps-you-improve-the-metrics-that-matter&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Pivotal Cloud Foundry 2.2发布&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Spring Boot项目目前正在招募开源贡献者，用以帮助完善文档和部分功能代码，详情看&amp;lt;a href=&amp;quot;https://github.com/spring-projects/spring-boot/issues?q=is%3Aopen+is%3Aissue+label%3A%22status%3A+ideal-for-contribution%22&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Github的问题列表&amp;lt;/a&amp;gt;。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://steeltoe.io/&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Steeltoe.NET&amp;lt;/a&amp;gt;作为.NET平台上类似Spring Cloud参考实现的云原生应用库，在Nuget上已经有超过50万的下载量，这背后的云原生技术推手&amp;lt;a href=&amp;quot;http://www.pivotal.io/&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Pivotal Software&amp;lt;/a&amp;gt;功不可没，开源开放的积极推动旨在吸引和影响更多的开发者加入到这一阵营。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
  接下来，再看看国内外社区一些新动态
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://www.jhipster.tech/2018/07/12/jhipster-release-5.1.0.html&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;JHipster 5.1.0发布&amp;lt;/a&amp;gt;，此版本共关闭了29个问题和PR，升级JHipster Registry到v4.0.0，另外修复了Angular在构建多个延迟加载模块时出现错误的问题。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Thibaud Lepretre最近更新了&amp;lt;code&amp;gt;cas-security-spring-boot-starter&amp;lt;/code&amp;gt;的&amp;lt;a href=&amp;quot;https://github.com/kakawait/cas-security-spring-boot-starter/blob/master/CHANGELOG.md&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;1.0版本计划&amp;lt;/a&amp;gt;，首次支持Spring Boot 2。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Netflix官方在Eureka项目Wiki上更新：&amp;lt;a href=&amp;quot;https://github.com/Netflix/eureka/wiki&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Eureka 2.0停止开发&amp;lt;/a&amp;gt;，但是1.9.x仍然会持续更新，这个消息对于朋友圈和社区的一些不明真相的朋友引起了不必要的恐慌。&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;写在最后，需要特别说明的是，作为一个针对&amp;lt;a href=&amp;quot;https://springdev.io&amp;quot;&amp;gt;Spring开发的站点&amp;lt;/a&amp;gt;，我还是要简单介绍下网站的定位，前期还是以我自己写技术文章、翻译官方文档，以及编译优质文章汇总为主，也欢迎开源爱好者投稿和提供文章、新闻线索。后面会逐步开放，接收社区成员的加入，共同打造优质的技术内容服务社区组织，希望大家提一些意见和建议，我也会逐步优化和改进，尽情期待。&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
 &amp;lt;p&amp;gt;当你读到这篇文章时，也许正在赶回家的路上，周末愉快！&amp;lt;/p&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&amp;quot;footnotes&amp;quot;&amp;gt; 
 &amp;lt;hr&amp;gt; 
 &amp;lt;div class=&amp;quot;footnote&amp;quot; id=&amp;quot;_footnote_1&amp;quot;&amp;gt; 
  &amp;lt;a href=&amp;quot;#_footnoteref_1&amp;quot;&amp;gt;1&amp;lt;/a&amp;gt;. Spring.io的官方网站的源代码 
 &amp;lt;/div&amp;gt; 
 &amp;lt;div class=&amp;quot;footnote&amp;quot; id=&amp;quot;_footnote_2&amp;quot;&amp;gt; 
  &amp;lt;a href=&amp;quot;#_footnoteref_2&amp;quot;&amp;gt;2&amp;lt;/a&amp;gt;. JBake是一款静态网站和博客生成工具，专为开发者和设计师打造，Java语言开发并且开源 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>HTTP Basic认证</title>
      <link>https://springdev.io/blog/2018/06/http_basic_auth.html</link>
      <pubDate>星期四, 7 六月 2018 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2018/06/http_basic_auth.html</guid>
      <description>&amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
 &amp;lt;div id=&amp;quot;toctitle&amp;quot;&amp;gt;
  目录
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#创建新工程&amp;quot;&amp;gt;1. 创建新工程&amp;lt;/a&amp;gt; 
   &amp;lt;ul class=&amp;quot;sectlevel2&amp;quot;&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用spring_cli创建一个新工程&amp;quot;&amp;gt;1.1. 使用Spring CLI创建一个新工程&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用sts的新建工程向导来创建一个新工程&amp;quot;&amp;gt;1.2. 使用STS的新建工程向导来创建一个新工程&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; &amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#编写欢迎页面&amp;quot;&amp;gt;2. 编写欢迎页面&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#添加maven依赖&amp;quot;&amp;gt;3. 添加Maven依赖&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#运行应用&amp;quot;&amp;gt;4. 运行应用&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#登录认证&amp;quot;&amp;gt;5. 登录认证&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#禁用basic认证&amp;quot;&amp;gt;6. 禁用Basic认证&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#修改默认用户名和密码&amp;quot;&amp;gt;7. 修改默认用户名和密码&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#设置安全拦截路径&amp;quot;&amp;gt;8. 设置安全拦截路径&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#编写测试代码&amp;quot;&amp;gt;9. 编写测试代码&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#小结&amp;quot;&amp;gt;10. 小结&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock abstract&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    概要
   &amp;lt;/div&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     本文通过一个示例来讲解如何启用HTTP Basic认证来保护Web应用。 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;创建新工程&amp;quot;&amp;gt;1. 创建新工程&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;使用spring_cli创建一个新工程&amp;quot;&amp;gt;1.1. 使用Spring CLI创建一个新工程&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;pre&amp;gt;$ mkdir basic-auth
$ spring init --name basic-auth --artifactId basic-auth --groupId com.rainboyan.securitybook --language java --boot-version 1.5.13.RELEASE --type maven-project --dependencies web,thymeleaf,devtools --extract&amp;lt;/pre&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;sect2&amp;quot;&amp;gt; 
   &amp;lt;h3 id=&amp;quot;使用sts的新建工程向导来创建一个新工程&amp;quot;&amp;gt;1.2. 使用STS的新建工程向导来创建一个新工程&amp;lt;/h3&amp;gt; 
   &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
    &amp;lt;p&amp;gt;使用 kbd::[⌘+N]快捷键打开新建工程向导，如下图：&amp;lt;/p&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;img src=&amp;quot;https://springdev.io/images/new_spring_boot_project_01.png&amp;quot; alt=&amp;quot;new spring boot project 01&amp;quot;&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
     图表 1. 第一步 选择Spring Boot Starter
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;img src=&amp;quot;https://springdev.io/images/new_spring_boot_project_02.png&amp;quot; alt=&amp;quot;new spring boot project 02&amp;quot;&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
     图表 2. 第二步 填入项目的名称、包名等
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;img src=&amp;quot;https://springdev.io/images/new_spring_boot_project_03.png&amp;quot; alt=&amp;quot;new spring boot project 03&amp;quot;&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
     图表 3. 第三步 使用Spring Boot 1.5.13版本，并选择Web、Thymeleaf、DevTools
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
    &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
     &amp;lt;img src=&amp;quot;https://springdev.io/images/new_spring_boot_project_04.png&amp;quot; alt=&amp;quot;new spring boot project 04&amp;quot;&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
     图表 4. 第四步 最后确定
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;sect3&amp;quot;&amp;gt; 
    &amp;lt;h4 id=&amp;quot;导入刚才创建的工程&amp;quot;&amp;gt;1.2.1. 导入刚才创建的工程&amp;lt;/h4&amp;gt; 
    &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
     &amp;lt;p&amp;gt;打开STS，点击菜单&amp;lt;span class=&amp;quot;menuseq&amp;quot;&amp;gt;&amp;lt;b class=&amp;quot;menu&amp;quot;&amp;gt;File&amp;lt;/b&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;quot;fa fa-angle-right caret&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;b class=&amp;quot;menuitem&amp;quot;&amp;gt;Import&amp;lt;/b&amp;gt;&amp;lt;/span&amp;gt;，选择导入向导Maven下的&amp;lt;code&amp;gt;Existing Maven Projects&amp;lt;/code&amp;gt;，在下一步中选择刚刚创建的工程目录，确定后导入到STS中。&amp;lt;/p&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
     &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
      &amp;lt;img src=&amp;quot;https://springdev.io/images/import_existing_maven_project_01.png&amp;quot; alt=&amp;quot;import existing maven project 01&amp;quot;&amp;gt; 
     &amp;lt;/div&amp;gt; 
     &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
      图表 5. 第一步 选择Import Existing Maven Projects
     &amp;lt;/div&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
     &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
      &amp;lt;img src=&amp;quot;https://springdev.io/images/import_existing_maven_project_02.png&amp;quot; alt=&amp;quot;import existing maven project 02&amp;quot;&amp;gt; 
     &amp;lt;/div&amp;gt; 
     &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
      图表 6. 第二步 打开创建的工程所在目录
     &amp;lt;/div&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
     &amp;lt;p&amp;gt;成功导入项目后，可以看到项目的界面：&amp;lt;/p&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
     &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
      &amp;lt;img src=&amp;quot;https://springdev.io/images/basic_auth_project_import.png&amp;quot; alt=&amp;quot;basic auth project import&amp;quot;&amp;gt; 
     &amp;lt;/div&amp;gt; 
     &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
      图表 7. 导入后的STS界面
     &amp;lt;/div&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
     &amp;lt;p&amp;gt;此时创建的新工程basic-auth目录结构如下:&amp;lt;/p&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
     &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
      &amp;lt;pre&amp;gt;├── mvnw
├── mvnw.cmd
├── pom.xml
└── src
    ├── main
    │&amp;amp;nbsp;&amp;amp;nbsp; ├── java
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp; └── com
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;     └── rainboyan
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;         └── securitybook
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;             └── basicauth
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;                 └── BasicAuthApplication.java
    │&amp;amp;nbsp;&amp;amp;nbsp; └── resources
    │&amp;amp;nbsp;&amp;amp;nbsp;     ├── application.properties
    │&amp;amp;nbsp;&amp;amp;nbsp;     ├── static
    │&amp;amp;nbsp;&amp;amp;nbsp;     └── templates
    └── test
        └── java
            └── com
                └── rainboyan
                    └── securitybook
                        └── basicauth
                            └── BasicAuthApplicationTests.java&amp;lt;/pre&amp;gt; 
     &amp;lt;/div&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
     &amp;lt;p&amp;gt;在工程根目录打开&amp;lt;code&amp;gt;pom.xml&amp;lt;/code&amp;gt;，其内容如下：&amp;lt;/p&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
     &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
      pom.xml
     &amp;lt;/div&amp;gt; 
     &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
      &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-xml&amp;quot; data-lang=&amp;quot;xml&amp;quot;&amp;gt;&amp;amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;amp;gt;
&amp;amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
	xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;amp;gt;
	&amp;amp;lt;modelVersion&amp;amp;gt;4.0.0&amp;amp;lt;/modelVersion&amp;amp;gt;

	&amp;amp;lt;groupId&amp;amp;gt;com.rainboyan.securitybook&amp;amp;lt;/groupId&amp;amp;gt;
	&amp;amp;lt;artifactId&amp;amp;gt;basic-auth&amp;amp;lt;/artifactId&amp;amp;gt;
	&amp;amp;lt;version&amp;amp;gt;0.0.1-SNAPSHOT&amp;amp;lt;/version&amp;amp;gt;
	&amp;amp;lt;packaging&amp;amp;gt;jar&amp;amp;lt;/packaging&amp;amp;gt;

	&amp;amp;lt;name&amp;amp;gt;basic-auth&amp;amp;lt;/name&amp;amp;gt;
	&amp;amp;lt;description&amp;amp;gt;Demo project for Spring Boot&amp;amp;lt;/description&amp;amp;gt;

	&amp;amp;lt;parent&amp;amp;gt;
		&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
		&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-parent&amp;amp;lt;/artifactId&amp;amp;gt;
		&amp;amp;lt;version&amp;amp;gt;1.5.13.RELEASE&amp;amp;lt;/version&amp;amp;gt;
		&amp;amp;lt;relativePath/&amp;amp;gt; &amp;amp;lt;!-- lookup parent from repository --&amp;amp;gt;
	&amp;amp;lt;/parent&amp;amp;gt;

	&amp;amp;lt;properties&amp;amp;gt;
		&amp;amp;lt;project.build.sourceEncoding&amp;amp;gt;UTF-8&amp;amp;lt;/project.build.sourceEncoding&amp;amp;gt;
		&amp;amp;lt;project.reporting.outputEncoding&amp;amp;gt;UTF-8&amp;amp;lt;/project.reporting.outputEncoding&amp;amp;gt;
		&amp;amp;lt;java.version&amp;amp;gt;1.8&amp;amp;lt;/java.version&amp;amp;gt;
	&amp;amp;lt;/properties&amp;amp;gt;

	&amp;amp;lt;dependencies&amp;amp;gt;
		&amp;amp;lt;dependency&amp;amp;gt;
			&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
			&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-thymeleaf&amp;amp;lt;/artifactId&amp;amp;gt;
		&amp;amp;lt;/dependency&amp;amp;gt;
		&amp;amp;lt;dependency&amp;amp;gt;
			&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
			&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-web&amp;amp;lt;/artifactId&amp;amp;gt;
		&amp;amp;lt;/dependency&amp;amp;gt;

		&amp;amp;lt;dependency&amp;amp;gt;
			&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
			&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-devtools&amp;amp;lt;/artifactId&amp;amp;gt;
			&amp;amp;lt;scope&amp;amp;gt;runtime&amp;amp;lt;/scope&amp;amp;gt;
		&amp;amp;lt;/dependency&amp;amp;gt;
		&amp;amp;lt;dependency&amp;amp;gt;
			&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
			&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-test&amp;amp;lt;/artifactId&amp;amp;gt;
			&amp;amp;lt;scope&amp;amp;gt;test&amp;amp;lt;/scope&amp;amp;gt;
		&amp;amp;lt;/dependency&amp;amp;gt;
	&amp;amp;lt;/dependencies&amp;amp;gt;

	&amp;amp;lt;build&amp;amp;gt;
		&amp;amp;lt;plugins&amp;amp;gt;
			&amp;amp;lt;plugin&amp;amp;gt;
				&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
				&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-maven-plugin&amp;amp;lt;/artifactId&amp;amp;gt;
			&amp;amp;lt;/plugin&amp;amp;gt;
		&amp;amp;lt;/plugins&amp;amp;gt;
	&amp;amp;lt;/build&amp;amp;gt;


&amp;amp;lt;/project&amp;amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
     &amp;lt;/div&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
     &amp;lt;p&amp;gt;在Package Explorer中打开应用主程序文件：BasicAuthApplication.java，可以看到这个文件代码非常简单。&amp;lt;/p&amp;gt; 
    &amp;lt;/div&amp;gt; 
    &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
     &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
      src/main/java/com/rainboyan/scuritybook/basicauth/BasicAuthApplication.java
     &amp;lt;/div&amp;gt; 
     &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
      &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;package com.rainboyan.securitybook.basicauth;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class BasicAuthApplication {

	public static void main(String[] args) {
		SpringApplication.run(BasicAuthApplication.class, args);
	}
}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
     &amp;lt;/div&amp;gt; 
    &amp;lt;/div&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;编写欢迎页面&amp;quot;&amp;gt;2. 编写欢迎页面&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;接下来我们开始编写欢迎页面。在src/main/resources/templates中新增一个index.html，内容如下：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    src/main/resources/templates/index.html
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-html&amp;quot; data-lang=&amp;quot;html&amp;quot;&amp;gt;&amp;amp;lt;!DOCTYPE html&amp;amp;gt;
&amp;amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot; xmlns:th=&amp;quot;http://www.thymeleaf.org&amp;quot;&amp;amp;gt;
    &amp;amp;lt;head&amp;amp;gt;
        &amp;amp;lt;title&amp;amp;gt;Spring Security Book | Basic Authentication Example&amp;amp;lt;/title&amp;amp;gt;
    &amp;amp;lt;/head&amp;amp;gt;
    &amp;amp;lt;body&amp;amp;gt;
        &amp;amp;lt;h1&amp;amp;gt;Welcome!&amp;amp;lt;/h1&amp;amp;gt;

    &amp;amp;lt;/body&amp;amp;gt;
&amp;amp;lt;/html&amp;amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;接下来编写&amp;lt;code&amp;gt;MvcConfig.java&amp;lt;/code&amp;gt;类，设置首页视图。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    src/main/java/com/rainboyan/securitybook/basicauth/MvcConfig.java
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;package com.rainboyan.securitybook.basicauth;

import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframewozrk.web.servlet.config.annotation.WebMvcConfigurerAdapter;

@Configuration
public class MvcConfig extends WebMvcConfigurerAdapter {

    public void addViewControllers(ViewControllerRegistry registry) {
        registry.addViewController(&amp;quot;/&amp;quot;).setViewName(&amp;quot;index&amp;quot;);
    }

}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;添加maven依赖&amp;quot;&amp;gt;3. 添加Maven依赖&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Spring Boot提供了针对集成Spring Security 的&amp;lt;code&amp;gt;spring-boot-starter-security&amp;lt;/code&amp;gt;，在项目依赖中引入即可。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;具体如下在pom.xml 中增加下列依赖：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    pom.xml
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-xml&amp;quot; data-lang=&amp;quot;xml&amp;quot;&amp;gt;&amp;amp;lt;dependency&amp;amp;gt;
    &amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
    &amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-security&amp;amp;lt;/artifactId&amp;amp;gt;
&amp;amp;lt;/dependency&amp;amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;运行应用&amp;quot;&amp;gt;4. 运行应用&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;通过菜单 &amp;lt;span class=&amp;quot;menuseq&amp;quot;&amp;gt;&amp;lt;b class=&amp;quot;menu&amp;quot;&amp;gt;Run&amp;lt;/b&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;quot;fa fa-angle-right caret&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;b class=&amp;quot;submenu&amp;quot;&amp;gt;Run as&amp;lt;/b&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;quot;fa fa-angle-right caret&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;b class=&amp;quot;menuitem&amp;quot;&amp;gt;Spring Boot App&amp;lt;/b&amp;gt;&amp;lt;/span&amp;gt;，或者使用Maven命令都可以启动。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在启动过程中会出现下面日志：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;...
2018-06-07 12:34:08.181  INFO 11502 --- [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-07 12:34:08.222  INFO 11502 --- [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-07 12:34:08.608  INFO 11502 --- [  restartedMain] b.a.s.AuthenticationManagerConfiguration :

Using default security password: 9f72d51f-c42c-45bb-a041-b3bbd33b44ab

2018-06-07 12:34:08.654  INFO 11502 --- [  restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern=&amp;#39;/css/**&amp;#39;], Ant [pattern=&amp;#39;/js/**&amp;#39;], Ant [pattern=&amp;#39;/images/**&amp;#39;], Ant [pattern=&amp;#39;/webjars/**&amp;#39;], Ant [pattern=&amp;#39;/**/favicon.ico&amp;#39;], Ant [pattern=&amp;#39;/error&amp;#39;]]], []
2018-06-07 12:34:08.711  INFO 11502 --- [  restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern=&amp;#39;/**&amp;#39;]]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8f04b60, org.springframework.security.web.context.SecurityContextPersistenceFilter@7df59e44, org.springframework.security.web.header.HeaderWriterFilter@75dafe9a, org.springframework.security.web.authentication.logout.LogoutFilter@4feeceaa, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5a756f31, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a07fe58, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78f4726c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e3beab6, org.springframework.security.web.session.SessionManagementFilter@2d5cdd40, org.springframework.security.web.access.ExceptionTranslationFilter@735da450, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7491c80b]

...&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;登录认证&amp;quot;&amp;gt;5. 登录认证&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;通过启动日志可以发现，Spring Security的DefaultSecurityFilterChain已经起作用了，注意这里Spring Boot自动配置默认为&amp;lt;code&amp;gt;user&amp;lt;/code&amp;gt;用户生成一个随机密码：&amp;lt;code&amp;gt;9f72d51f-c42c-45bb-a041-b3bbd33b44ab&amp;lt;/code&amp;gt;。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;我们打开浏览器，输入地址：&amp;lt;a href=&amp;quot;http://localhost:8080/&amp;quot; class=&amp;quot;bare&amp;quot;&amp;gt;http://localhost:8080/&amp;lt;/a&amp;gt;，会出现弹框要求输入用户名和密码，然后输入Username：user和Passowrd：9f72d51f-c42c-45bb-a041-b3bbd33b44ab，点击 &amp;lt;b class=&amp;quot;button&amp;quot;&amp;gt;Sign In&amp;lt;/b&amp;gt;，最后则会看到熟悉的欢迎界面，这说明认证通过了。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;img src=&amp;quot;https://springdev.io/images/basic_auth_login_dialog.png&amp;quot; alt=&amp;quot;basic auth login dialog&amp;quot;&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;禁用basic认证&amp;quot;&amp;gt;6. 禁用Basic认证&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;当Spring Security的依赖加上后，Spring Boot 会默认启用Basic 认证拦截所有浏览器请求，你可以设置为&amp;lt;code class=&amp;quot;red&amp;quot;&amp;gt;false&amp;lt;/code&amp;gt;来禁用。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;security.basic.enabled=false&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;修改默认用户名和密码&amp;quot;&amp;gt;7. 修改默认用户名和密码&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Spring Boot 默认配置了Basic认证相关的参数：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;security.user.name=manager     # 设置用户的用户名
security.user.password=passwd  # 设置用户的密码，如果没有设置会采用随机数
security.user.role=USER        # 设置用户的角色&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;admonitionblock note&amp;quot;&amp;gt; 
   &amp;lt;table&amp;gt; 
    &amp;lt;tbody&amp;gt;
     &amp;lt;tr&amp;gt; 
      &amp;lt;td class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i class=&amp;quot;fa icon-note&amp;quot; title=&amp;quot;Note&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/td&amp;gt; 
      &amp;lt;td class=&amp;quot;content&amp;quot;&amp;gt; 除了在配置文件中设置用户信息外，还可以通过编码方式来设置提供用户数据源。 &amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
    &amp;lt;/tbody&amp;gt;
   &amp;lt;/table&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;设置安全拦截路径&amp;quot;&amp;gt;8. 设置安全拦截路径&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;security.basic.path=/api/*,/admin/*&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;编写测试代码&amp;quot;&amp;gt;9. 编写测试代码&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;添加&amp;lt;code&amp;gt;spring-security-test&amp;lt;/code&amp;gt;依赖：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-xml&amp;quot; data-lang=&amp;quot;xml&amp;quot;&amp;gt;&amp;amp;lt;dependency&amp;amp;gt;
  &amp;amp;lt;groupId&amp;amp;gt;org.springframework.security&amp;amp;lt;/groupId&amp;amp;gt;
  &amp;amp;lt;artifactId&amp;amp;gt;spring-security-test&amp;amp;lt;/artifactId&amp;amp;gt;
  &amp;amp;lt;scope&amp;amp;gt;test&amp;amp;lt;/scope&amp;amp;gt;
&amp;amp;lt;/dependency&amp;amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;为了测试Basic认证，首先要设置默认密码而不是采用随机密码。 修改&amp;lt;code&amp;gt;application.properties&amp;lt;/code&amp;gt;，添加如下配置:&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;security.user.password=password&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;接着编写测试用例代码：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;package com.rainboyan.securitybook.basicauth;

import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.httpBasic;
import static org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.springSecurity;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

@RunWith(SpringRunner.class)  &amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;(1)&amp;lt;/b&amp;gt;
@SpringBootTest  &amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;2&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;(2)&amp;lt;/b&amp;gt;
public class BasicAuthApplicationTests {

	@Autowired
	private WebApplicationContext context;

	private MockMvc mvc;

	@Before
	public void setup() {  &amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;3&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;(3)&amp;lt;/b&amp;gt;
		mvc = MockMvcBuilders
				.webAppContextSetup(context)
				.apply(springSecurity())  &amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;4&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;(4)&amp;lt;/b&amp;gt;
				.build();
	}

	@Test
	public void basicAuthWithCustomPassword() throws Exception {
		mvc.perform(
				get(&amp;quot;/&amp;quot;).with(httpBasic(&amp;quot;user&amp;quot;, &amp;quot;password&amp;quot;))) &amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;5&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;(5)&amp;lt;/b&amp;gt;
						.andExpect(status().isOk());  &amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;6&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;(6)&amp;lt;/b&amp;gt;
	}
}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;colist arabic&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    代码说明如下：
   &amp;lt;/div&amp;gt; 
   &amp;lt;table&amp;gt; 
    &amp;lt;tbody&amp;gt;
     &amp;lt;tr&amp;gt; 
      &amp;lt;td&amp;gt;&amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;1&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt; 
      &amp;lt;td&amp;gt;SpringRunner是在Spring 4.3版本新增的注解，是SpringJUnit4ClassRunner的别名。SpringJUnit4ClassRunner.class提供了集成JUnit 4.4的能力。&amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
     &amp;lt;tr&amp;gt; 
      &amp;lt;td&amp;gt;&amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;2&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;2&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt; 
      &amp;lt;td&amp;gt;Spring Boot提供了@SpringBootTest注解，该注解简化了Spring Boot应用的测试，提供了对应spring-test中@ContextConfiguration的功能，用于创建ApplicationContext。&amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
     &amp;lt;tr&amp;gt; 
      &amp;lt;td&amp;gt;&amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;3&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;3&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt; 
      &amp;lt;td&amp;gt;测试准备工作&amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
     &amp;lt;tr&amp;gt; 
      &amp;lt;td&amp;gt;&amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;4&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;4&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt; 
      &amp;lt;td&amp;gt;添加Spring Security的一些功能特性&amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
     &amp;lt;tr&amp;gt; 
      &amp;lt;td&amp;gt;&amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;5&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;5&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt; 
      &amp;lt;td&amp;gt;设置Basic认证需要的用户名和密码&amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
     &amp;lt;tr&amp;gt; 
      &amp;lt;td&amp;gt;&amp;lt;i class=&amp;quot;conum&amp;quot; data-value=&amp;quot;6&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;b&amp;gt;6&amp;lt;/b&amp;gt;&amp;lt;/td&amp;gt; 
      &amp;lt;td&amp;gt;测试验证结果是符合预期，这里是响应状态码为200，表示请求成功&amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
    &amp;lt;/tbody&amp;gt;
   &amp;lt;/table&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;小结&amp;quot;&amp;gt;10. 小结&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Basic认证由于比较简单，在项目早期可以很快实施，但是由于在每次请求都会输入用户名和密码所以安全性并不高。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>热身：编写一个Hello World项目</title>
      <link>https://springdev.io/blog/2018/06/hello_world.html</link>
      <pubDate>星期二, 5 六月 2018 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2018/06/hello_world.html</guid>
      <description>&amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
 &amp;lt;div id=&amp;quot;toctitle&amp;quot;&amp;gt;
  目录
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#创建一个新工程&amp;quot;&amp;gt;创建一个新工程&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#导入刚才创建的工程&amp;quot;&amp;gt;导入刚才创建的工程&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#代码一览&amp;quot;&amp;gt;代码一览&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#启动工程&amp;quot;&amp;gt;启动工程&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#开始编写代码了&amp;quot;&amp;gt;开始编写代码了&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#小结&amp;quot;&amp;gt;小结&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock abstract&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    概要
   &amp;lt;/div&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     本文介绍如何快速创建一个Spring Boot Web应用，然后编写一个示例页面并运行它。 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;创建一个新工程&amp;quot;&amp;gt;创建一个新工程&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在经过前面几个章节的准备，我们已经搭建好了本地开发环境，是时候开始热身准备创建一个Spring应用了。接下来我们要通过一步一步的介绍如何从创建空白工程，然后简单写一个&amp;lt;code&amp;gt;Hello World&amp;lt;/code&amp;gt;应用，是的，它非常简单，但是足够可以说明我们已经开始上路了，这是万里长征的第一步。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    使用Spring CLI 创建一个新工程
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ mkdir hello-world
$ cd hello-world
$ spring init --name hello-world --artifactId hello-world --groupId com.rainboyan.securitybook --language java --boot-version 1.5.13.RELEASE --type maven-project --dependencies web,thymeleaf,devtools --extract&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;导入刚才创建的工程&amp;quot;&amp;gt;导入刚才创建的工程&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;打开STS，点击菜单&amp;lt;span class=&amp;quot;menuseq&amp;quot;&amp;gt;&amp;lt;b class=&amp;quot;menu&amp;quot;&amp;gt;File&amp;lt;/b&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;quot;fa fa-angle-right caret&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;b class=&amp;quot;menuitem&amp;quot;&amp;gt;Import&amp;lt;/b&amp;gt;&amp;lt;/span&amp;gt;，选择导入向导Maven下的&amp;lt;code&amp;gt;Existing Maven Projects&amp;lt;/code&amp;gt;，在下一步中选择刚刚创建的工程目录，确定后导入到STS中。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;img src=&amp;quot;https://springdev.io/images/import_existing_maven_project_01.png&amp;quot; alt=&amp;quot;import existing maven project 01&amp;quot;&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    图表 1. 第一步 选择Import Existing Maven Projects
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;img src=&amp;quot;https://springdev.io/images/import_existing_maven_project_02.png&amp;quot; alt=&amp;quot;import existing maven project 02&amp;quot;&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    图表 2. 第二步 打开创建的工程所在目录
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;成功导入项目后，可以看到项目的界面：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;img src=&amp;quot;https://springdev.io/images/sts_workspace.png&amp;quot; alt=&amp;quot;sts workspace&amp;quot;&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    图表 3. 导入后的STS界面
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;代码一览&amp;quot;&amp;gt;代码一览&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;此时创建的新工程hello-world目录结构如下:&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;├── mvnw
├── mvnw.cmd
├── pom.xml
└── src
    ├── main
    │&amp;amp;nbsp;&amp;amp;nbsp; ├── java
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp; └── com
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;     └── rainboyan
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;         └── securitybook
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;             └── helloworld
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;                 └── HelloWorldApplication.java
    │&amp;amp;nbsp;&amp;amp;nbsp; └── resources
    │&amp;amp;nbsp;&amp;amp;nbsp;     ├── application.properties
    │&amp;amp;nbsp;&amp;amp;nbsp;     ├── static
    │&amp;amp;nbsp;&amp;amp;nbsp;     └── templates
    └── test
        └── java
            └── com
                └── rainboyan
                    └── securitybook
                        └── helloworld
                            └── HelloWorldApplicationTests.java&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在工程根目录打开&amp;lt;code&amp;gt;pom.xml&amp;lt;/code&amp;gt;，其内容如下：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    pom.xml
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-xml&amp;quot; data-lang=&amp;quot;xml&amp;quot;&amp;gt;&amp;amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;amp;gt;
&amp;amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
	xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;amp;gt;
	&amp;amp;lt;modelVersion&amp;amp;gt;4.0.0&amp;amp;lt;/modelVersion&amp;amp;gt;

	&amp;amp;lt;groupId&amp;amp;gt;com.rainboyan.securitybook&amp;amp;lt;/groupId&amp;amp;gt;
	&amp;amp;lt;artifactId&amp;amp;gt;hello-world&amp;amp;lt;/artifactId&amp;amp;gt;
	&amp;amp;lt;version&amp;amp;gt;0.0.1-SNAPSHOT&amp;amp;lt;/version&amp;amp;gt;
	&amp;amp;lt;packaging&amp;amp;gt;jar&amp;amp;lt;/packaging&amp;amp;gt;

	&amp;amp;lt;name&amp;amp;gt;hello-world&amp;amp;lt;/name&amp;amp;gt;
	&amp;amp;lt;description&amp;amp;gt;Demo project for Spring Boot&amp;amp;lt;/description&amp;amp;gt;

	&amp;amp;lt;parent&amp;amp;gt;
		&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
		&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-parent&amp;amp;lt;/artifactId&amp;amp;gt;
		&amp;amp;lt;version&amp;amp;gt;1.5.13.RELEASE&amp;amp;lt;/version&amp;amp;gt;
		&amp;amp;lt;relativePath/&amp;amp;gt; &amp;amp;lt;!-- lookup parent from repository --&amp;amp;gt;
	&amp;amp;lt;/parent&amp;amp;gt;

	&amp;amp;lt;properties&amp;amp;gt;
		&amp;amp;lt;project.build.sourceEncoding&amp;amp;gt;UTF-8&amp;amp;lt;/project.build.sourceEncoding&amp;amp;gt;
		&amp;amp;lt;project.reporting.outputEncoding&amp;amp;gt;UTF-8&amp;amp;lt;/project.reporting.outputEncoding&amp;amp;gt;
		&amp;amp;lt;java.version&amp;amp;gt;1.8&amp;amp;lt;/java.version&amp;amp;gt;
	&amp;amp;lt;/properties&amp;amp;gt;

	&amp;amp;lt;dependencies&amp;amp;gt;
		&amp;amp;lt;dependency&amp;amp;gt;
			&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
			&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-thymeleaf&amp;amp;lt;/artifactId&amp;amp;gt;
		&amp;amp;lt;/dependency&amp;amp;gt;
		&amp;amp;lt;dependency&amp;amp;gt;
			&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
			&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-web&amp;amp;lt;/artifactId&amp;amp;gt;
		&amp;amp;lt;/dependency&amp;amp;gt;

		&amp;amp;lt;dependency&amp;amp;gt;
			&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
			&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-devtools&amp;amp;lt;/artifactId&amp;amp;gt;
			&amp;amp;lt;scope&amp;amp;gt;runtime&amp;amp;lt;/scope&amp;amp;gt;
		&amp;amp;lt;/dependency&amp;amp;gt;
		&amp;amp;lt;dependency&amp;amp;gt;
			&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
			&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-starter-test&amp;amp;lt;/artifactId&amp;amp;gt;
			&amp;amp;lt;scope&amp;amp;gt;test&amp;amp;lt;/scope&amp;amp;gt;
		&amp;amp;lt;/dependency&amp;amp;gt;
	&amp;amp;lt;/dependencies&amp;amp;gt;

	&amp;amp;lt;build&amp;amp;gt;
		&amp;amp;lt;plugins&amp;amp;gt;
			&amp;amp;lt;plugin&amp;amp;gt;
				&amp;amp;lt;groupId&amp;amp;gt;org.springframework.boot&amp;amp;lt;/groupId&amp;amp;gt;
				&amp;amp;lt;artifactId&amp;amp;gt;spring-boot-maven-plugin&amp;amp;lt;/artifactId&amp;amp;gt;
			&amp;amp;lt;/plugin&amp;amp;gt;
		&amp;amp;lt;/plugins&amp;amp;gt;
	&amp;amp;lt;/build&amp;amp;gt;


&amp;amp;lt;/project&amp;amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在Package Explorer中打开应用主程序文件：&amp;lt;code&amp;gt;HelloWorldApplication.java&amp;lt;/code&amp;gt;，可以看到这个文件代码非常简单。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    src/main/java/com/rainboyan/scuritybook/helloworld/HelloWorldApplication.java
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;package com.rainboyan.securitybook.helloworld;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class HelloWorldApplication {

	public static void main(String[] args) {
		SpringApplication.run(HelloWorldApplication.class, args);
	}
}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;启动工程&amp;quot;&amp;gt;启动工程&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;截止目前，我们还没有写任何代码，但是Spring Boot已经生成的代码我们可以先启动下看看效果。首先选中刚才的工程，然后打开菜单&amp;lt;span class=&amp;quot;menuseq&amp;quot;&amp;gt;&amp;lt;b class=&amp;quot;menu&amp;quot;&amp;gt;Run&amp;lt;/b&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;quot;fa fa-angle-right caret&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;b class=&amp;quot;submenu&amp;quot;&amp;gt;Run as&amp;lt;/b&amp;gt;&amp;amp;nbsp;&amp;lt;i class=&amp;quot;fa fa-angle-right caret&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;b class=&amp;quot;menuitem&amp;quot;&amp;gt;Spring Boot App&amp;lt;/b&amp;gt;&amp;lt;/span&amp;gt;，应用就开始启动了，可以在控制台看到启动应用的日志。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;19:24:05.659 [main] DEBUG org.springframework.boot.devtools.settings.DevToolsSettings - Included patterns for restart : []
19:24:05.661 [main] DEBUG org.springframework.boot.devtools.settings.DevToolsSettings - Excluded patterns for restart : [/spring-boot-starter/target/classes/, /spring-boot-autoconfigure/target/classes/, /spring-boot-starter-[\w-]+/, /spring-boot/target/classes/, /spring-boot-actuator/target/classes/, /spring-boot-devtools/target/classes/]
19:24:05.661 [main] DEBUG org.springframework.boot.devtools.restart.ChangeableUrls - Matching URLs for reloading : [file:/Users/rain/Development/alpha/books/spring-security-book/source/hello-world/target/classes/]

  .   ____          _            __ _ _
 /\\ / ___&amp;#39;_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | &amp;#39;_ | &amp;#39;_| | &amp;#39;_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  &amp;#39;  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::       (v1.5.13.RELEASE)

2018-06-05 19:24:05.930  INFO 86432 --- [  restartedMain] c.r.s.helloworld.HelloWorldApplication   : Starting HelloWorldApplication on Michaels-MBP.lan with PID 86432 (/Users/rain/Development/alpha/books/spring-security-book/source/hello-world/target/classes started by rain in /Users/rain/Development/alpha/books/spring-security-book/source/hello-world)
2018-06-05 19:24:05.931  INFO 86432 --- [  restartedMain] c.r.s.helloworld.HelloWorldApplication   : No active profile set, falling back to default profiles: default
2018-06-05 19:24:06.133  INFO 86432 --- [  restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@574f5267: startup date [TUE Jun 05 19:24:06 CST 2018]; root of context hierarchy
2018-06-05 19:24:07.282  INFO 86432 --- [  restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-06-05 19:24:07.311  INFO 86432 --- [  restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-06-05 19:24:07.311  INFO 86432 --- [  restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-06-05 19:24:07.402  INFO 86432 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-06-05 19:24:07.402  INFO 86432 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1273 ms
2018-06-05 19:24:07.502  INFO 86432 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: &amp;#39;dispatcherServlet&amp;#39; to [/]
2018-06-05 19:24:07.505  INFO 86432 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &amp;#39;characterEncodingFilter&amp;#39; to: [/*]
2018-06-05 19:24:07.505  INFO 86432 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &amp;#39;hiddenHttpMethodFilter&amp;#39; to: [/*]
2018-06-05 19:24:07.506  INFO 86432 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &amp;#39;httpPutFormContentFilter&amp;#39; to: [/*]
2018-06-05 19:24:07.506  INFO 86432 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &amp;#39;requestContextFilter&amp;#39; to: [/*]
2018-06-05 19:24:07.738  INFO 86432 --- [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@574f5267: startup date [TUE Jun 05 19:24:06 CST 2018]; root of context hierarchy
2018-06-05 19:24:07.792  INFO 86432 --- [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &amp;quot;{[/error]}&amp;quot; onto public org.springframework.http.ResponseEntity&amp;amp;lt;java.util.Map&amp;amp;lt;java.lang.String, java.lang.Object&amp;amp;gt;&amp;amp;gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-05 19:24:07.792  INFO 86432 --- [  restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &amp;quot;{[/error],produces=[text/html]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-05 19:24:07.804  INFO 86432 --- [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Root mapping to handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2018-06-05 19:24:07.817  INFO 86432 --- [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-05 19:24:07.817  INFO 86432 --- [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-05 19:24:07.851  INFO 86432 --- [  restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-05 19:24:08.190  INFO 86432 --- [  restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2018-06-05 19:24:08.229  INFO 86432 --- [  restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-06-05 19:24:08.280  INFO 86432 --- [  restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-06-05 19:24:08.285  INFO 86432 --- [  restartedMain] c.r.s.helloworld.HelloWorldApplication   : Started HelloWorldApplication in 2.612 seconds (JVM running for 3.592)&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;除了在STS中启动应用外，还可以在命令行控制台中通过Maven命令来启动，&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ mvn spring-boot:run&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;待启动完成后，打开浏览器，输入地址：&amp;lt;a href=&amp;quot;http://localhost:8080/&amp;quot; class=&amp;quot;bare&amp;quot;&amp;gt;http://localhost:8080/&amp;lt;/a&amp;gt;，将会看到下面的空白错误页面：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;img src=&amp;quot;https://springdev.io/images/whitelabel_error_page.png&amp;quot; alt=&amp;quot;whitelabel error page&amp;quot;&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;不用奇怪，因为到目前为止，我们并没有开始创建任何页面。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;开始编写代码了&amp;quot;&amp;gt;开始编写代码了&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;接下来我们开始编写欢迎页面。在&amp;lt;code&amp;gt;src/main/resources/templates&amp;lt;/code&amp;gt;目录中新增一个index.html，内容如下：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    src/main/resources/templates/index.html
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-html&amp;quot; data-lang=&amp;quot;html&amp;quot;&amp;gt;&amp;amp;lt;!DOCTYPE html&amp;amp;gt;
&amp;amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot; xmlns:th=&amp;quot;http://www.thymeleaf.org&amp;quot;&amp;amp;gt;
    &amp;amp;lt;head&amp;amp;gt;
        &amp;amp;lt;title&amp;amp;gt;Spring Security Book&amp;amp;lt;/title&amp;amp;gt;
    &amp;amp;lt;/head&amp;amp;gt;
    &amp;amp;lt;body&amp;amp;gt;
        &amp;amp;lt;h1&amp;amp;gt;Hello, World!&amp;amp;lt;/h1&amp;amp;gt;

    &amp;amp;lt;/body&amp;amp;gt;
&amp;amp;lt;/html&amp;amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;编写&amp;lt;code&amp;gt;MvcConfig.java&amp;lt;/code&amp;gt;类，设置首页视图。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    src/main/java/com/rainboyan/securitybook/helloworld/MvcConfig.java
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;package com.rainboyan.securitybook.helloworld;

import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

@Configuration
public class MvcConfig extends WebMvcConfigurerAdapter {

    public void addViewControllers(ViewControllerRegistry registry) {
        registry.addViewController(&amp;quot;/&amp;quot;).setViewName(&amp;quot;index&amp;quot;);
    }

}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;保存代码，再次启动后会看到下图：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;img src=&amp;quot;https://springdev.io/images/hello_world_page.png&amp;quot; alt=&amp;quot;hello world page&amp;quot;&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;小结&amp;quot;&amp;gt;小结&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;真棒，恭喜你，现在已经可以通过命令行快速创建一个Spring Boot应用，然后编写简单代码并成功运行它了。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>安装 STS</title>
      <link>https://springdev.io/blog/2018/06/sts.html</link>
      <pubDate>星期一, 4 六月 2018 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2018/06/sts.html</guid>
      <description>&amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
 &amp;lt;div id=&amp;quot;toctitle&amp;quot;&amp;gt;
  目录
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#通过下载安装包来安装&amp;quot;&amp;gt;通过下载安装包来安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用scoop安装sts&amp;quot;&amp;gt;使用Scoop安装STS&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock abstract&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    概要
   &amp;lt;/div&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     本文主要介绍有关STS的工具特性和如何安装。 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Spring Tool Suite（简称：STS）是Spring Source开发团队在基于Eclipse基础上为Spring应用的开发专门定制的一款集成开发环境，对于Spring应用的编码实现、调试、部署等各个流程，集成了包括Pivotal tc Server、Pivotal Cloud Foundry、Git、Maven、AspectJ等工具，极大提供了开发效率。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    主要特性如下：
   &amp;lt;/div&amp;gt; 
   &amp;lt;ul&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;支持Java 8&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;集成Git、Gradle、Maven等工具&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;更好的识别Spring项目，能够识别Spring配置文件，诸如命名空间、控制器、Bean的定义&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;Spring配置文件的校验检查，更早发现错误&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;重构增强，除了对于Java代码的重构功能，还支持Spring配置文件中的重构，比如Bean的重命名&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;代码快速提示，无论是Java代码和配置文件都能根据内容快速提示&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;图形化展示项目中Bean的依赖关系，支持Spring Integration、Spring Batch、Spring Webflow&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;AOP最佳支持&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;集成Cloud Foundry和Pivotal tc Server，云部署开发更加简单&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;通过下载安装包来安装&amp;quot;&amp;gt;通过下载安装包来安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;浏览器打开STS官方网站&amp;lt;a href=&amp;quot;https://spring.io/tools/sts&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;STS&amp;lt;/a&amp;gt;，当前最新版本是：3.9.4，基于Eclipse 4.7.3a构建。除了使用完整安装包，如果本地已经安装了Eclipse，那么还可以通过插件的方式来安装。STS官方提供了Eclipse 4.6、4.7、4.8等几个主流版本的插件可下载本地安装，也可以通过在线安装插件。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;img src=&amp;quot;https://springdev.io/images/sts_homepage.png&amp;quot; alt=&amp;quot;sts homepage&amp;quot;&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    图表 1. STS官方主页
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;imageblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;img src=&amp;quot;https://springdev.io/images/sts_download_page.png&amp;quot; alt=&amp;quot;sts download page&amp;quot;&amp;gt; 
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    图表 2. STS下载页面
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;使用scoop安装sts&amp;quot;&amp;gt;使用Scoop安装STS&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://scoop.sh&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Scoop&amp;lt;/a&amp;gt;是使用PowerShell语言为Windows系统开发的一个命令行的安装管理工具，功能与OSX Homebrew类似。 Scoop的详细安装请参考&amp;lt;a href=&amp;quot;https://github.com/lukesampson/scoop/wiki/Quick-Start&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;官方安装说明&amp;lt;/a&amp;gt;。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在命令行窗口执行下面的命令来安装STS如下：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;&amp;amp;gt; scoop bucket add extras
&amp;amp;gt; scoop install sts&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>Spring Boot CLI使用详解</title>
      <link>https://springdev.io/blog/2018/06/springbootcli.html</link>
      <pubDate>星期日, 3 六月 2018 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2018/06/springbootcli.html</guid>
      <description>&amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
 &amp;lt;div id=&amp;quot;toctitle&amp;quot;&amp;gt;
  目录
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#常用命令及参数说明&amp;quot;&amp;gt;1. 常用命令及参数说明&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#运行groovy脚本程序&amp;quot;&amp;gt;2. 运行Groovy脚本程序&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#快速创建一个新工程&amp;quot;&amp;gt;3. 快速创建一个新工程&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock abstract&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    概要
   &amp;lt;/div&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     本文详细介绍了Spring Boot CLI的命令以及在实际开发中如何使用。 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在之前的文章中&amp;lt;a href=&amp;quot;/blog/2018/06/springboot.html&amp;quot;&amp;gt;安装Spring Boot CLI&amp;lt;/a&amp;gt;，我们介绍了几种常见的快速安装方式。接下来这个章节，我们会详细介绍它的命令和在实际开发中的使用。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Spring Boot CLI是一个快速创建原型项目的命令行工具。对大多数开发人员来说，相比IDE的菜单选择和向导界面，会更倾向使用命令行来处理一些基础工作，比如创建项目、运行测试、编译打包等等，Spring Boot CLI就是为这些人准备的。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;常用命令及参数说明&amp;quot;&amp;gt;1. 常用命令及参数说明&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;打开一个终端控制台窗口，我们键入&amp;lt;code&amp;gt;spring&amp;lt;/code&amp;gt;命令，就会看到控制台打印出了该命令的帮助说明。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;table class=&amp;quot;tableblock frame-all grid-all stretch&amp;quot;&amp;gt; 
   &amp;lt;colgroup&amp;gt; 
    &amp;lt;col&amp;gt; 
    &amp;lt;col&amp;gt; 
   &amp;lt;/colgroup&amp;gt; 
   &amp;lt;thead&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;th class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;命令&amp;lt;/th&amp;gt; 
     &amp;lt;th class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;功能说明&amp;lt;/th&amp;gt; 
    &amp;lt;/tr&amp;gt; 
   &amp;lt;/thead&amp;gt; 
   &amp;lt;tbody&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;run&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;运行一个Groovy脚本程序&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;test&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;测试一个Groovy脚本程序&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;grab&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;从远程仓库下载Groovy脚本程序需要的依赖包&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;jar&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;将一个Groovy脚本程序打包成可执行的JAR文件&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;war&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;将一个Groovy脚本程序打包成可执行的WAR文件&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;install&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;安装依赖包并下载到lib/ext目录&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;uninstall&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;卸载依赖包并从lib/ext目录删除&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;init&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;初始创建一个新工程，和start.spring.io提供的页面功能一样&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
   &amp;lt;/tbody&amp;gt; 
  &amp;lt;/table&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ spring

usage: spring [--help] [--version]
       &amp;amp;lt;command&amp;amp;gt; [&amp;amp;lt;args&amp;amp;gt;]

Available commands are:

  run [options] &amp;amp;lt;files&amp;amp;gt; [--] [args]
    Run a spring groovy script

  test [options] &amp;amp;lt;files&amp;amp;gt; [--] [args]
    Run a spring groovy script test

  grab
    Download a spring groovy script&amp;#39;s dependencies to ./repository

  jar [options] &amp;amp;lt;jar-name&amp;amp;gt; &amp;amp;lt;files&amp;amp;gt;
    Create a self-contained executable jar file from a Spring Groovy script

  war [options] &amp;amp;lt;war-name&amp;amp;gt; &amp;amp;lt;files&amp;amp;gt;
    Create a self-contained executable war file from a Spring Groovy script

  install [options] &amp;amp;lt;coordinates&amp;amp;gt;
    Install dependencies to the lib/ext directory

  uninstall [options] &amp;amp;lt;coordinates&amp;amp;gt;
    Uninstall dependencies from the lib/ext directory

  init [options] [location]
    Initialize a new project using Spring Initializr (start.spring.io)

  shell
    Start a nested shell

Common options:

  -d, --debug Verbose mode
    Print additional status information for the command you are running


See &amp;#39;spring help &amp;amp;lt;command&amp;amp;gt;&amp;#39; for more information on a specific command.&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;运行groovy脚本程序&amp;quot;&amp;gt;2. 运行Groovy脚本程序&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;接下来我们重点讲解&amp;lt;code&amp;gt;run&amp;lt;/code&amp;gt;和&amp;lt;code&amp;gt;init&amp;lt;/code&amp;gt;这两个命令的用法。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在终端控制台上执行下面的命令来查看下帮助：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ spring help run
spring run - Run a spring groovy script

usage: spring run [options] &amp;amp;lt;files&amp;amp;gt; [--] [args]

Option                     Description
------                     -----------
--autoconfigure [Boolean]  Add autoconfigure compiler
                             transformations (default: true)
--classpath, -cp           Additional classpath entries
--no-guess-dependencies    Do not attempt to guess dependencies
--no-guess-imports         Do not attempt to guess imports
-q, --quiet                Quiet logging
-v, --verbose              Verbose logging of dependency
                             resolution
--watch                    Watch the specified file for changes&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;接着，我们简单编写一段Groovy脚本程序：&amp;lt;code&amp;gt;hello.groovy&amp;lt;/code&amp;gt;，代码如下&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre class=&amp;quot;prettyprint highlight&amp;quot;&amp;gt;&amp;lt;code class=&amp;quot;language-java&amp;quot; data-lang=&amp;quot;java&amp;quot;&amp;gt;@RestController
class WebApplication {

	@RequestMapping(&amp;quot;/&amp;quot;)
	String home() {
		&amp;quot;Hello World!&amp;quot;
	}

}&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;然后试着执行命令：&amp;lt;code&amp;gt;spring run hello.groovy&amp;lt;/code&amp;gt;，是的，没错，它的确可以跑起来，这真是太棒了！&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;Resolving dependencies.....................

  .   ____          _            __ _ _
 /\\ / ___&amp;#39;_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | &amp;#39;_ | &amp;#39;_| | &amp;#39;_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  &amp;#39;  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::       (v1.5.13.RELEASE)

2018-06-03 11:25:23.632  INFO 10692 --- [       runner-0] o.s.boot.SpringApplication               : Starting application on Jill with PID 10692 (started by rain in D:\Development\springdev\springdev.io\code)
2018-06-03 11:25:23.647  INFO 10692 --- [       runner-0] o.s.boot.SpringApplication               : No active profile set, falling back to default profiles: default
2018-06-03 11:25:24.471  INFO 10692 --- [       runner-0] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7d093264: startup date [Sun Jun 03 11:25:24 CST 2018]; root of context hierarchy
2018-06-03 11:25:26.742  INFO 10692 --- [       runner-0] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2018-06-03 11:25:26.810  INFO 10692 --- [       runner-0] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2018-06-03 11:25:26.812  INFO 10692 --- [       runner-0] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.31
2018-06-03 11:25:27.031  INFO 10692 --- [ost-startStop-1] org.apache.catalina.loader.WebappLoader  : Unknown loader org.springframework.boot.cli.compiler.ExtendedGroovyClassLoader$DefaultScopeParentClassLoader@73e0e880 class org.springframework.boot.cli.compiler.ExtendedGroovyClassLoader$DefaultScopeParentClassLoader
2018-06-03 11:25:27.123  INFO 10692 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2018-06-03 11:25:27.123  INFO 10692 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2652 ms
2018-06-03 11:25:27.448  INFO 10692 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: &amp;#39;dispatcherServlet&amp;#39; to [/]
2018-06-03 11:25:27.457  INFO 10692 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &amp;#39;characterEncodingFilter&amp;#39; to: [/*]
2018-06-03 11:25:27.458  INFO 10692 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &amp;#39;hiddenHttpMethodFilter&amp;#39; to: [/*]
2018-06-03 11:25:27.458  INFO 10692 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &amp;#39;httpPutFormContentFilter&amp;#39; to: [/*]
2018-06-03 11:25:27.458  INFO 10692 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &amp;#39;requestContextFilter&amp;#39; to: [/*]
2018-06-03 11:25:28.188  INFO 10692 --- [       runner-0] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7d093264: startup date [Thu Jul 19 11:25:24 CST 2018]; root of context hierarchy
2018-06-03 11:25:28.336  INFO 10692 --- [       runner-0] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &amp;quot;{[/]}&amp;quot; onto public java.lang.String WebApplication.home()
2018-06-03 11:25:28.344  INFO 10692 --- [       runner-0] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &amp;quot;{[/error]}&amp;quot; onto public org.springframework.http.ResponseEntity&amp;amp;lt;java.util.Map&amp;amp;lt;java.lang.String, java.lang.Object&amp;amp;gt;&amp;amp;gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-06-03 11:25:28.345  INFO 10692 --- [       runner-0] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &amp;quot;{[/error],produces=[text/html]}&amp;quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-06-03 11:25:28.428  INFO 10692 --- [       runner-0] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-03 11:25:28.429  INFO 10692 --- [       runner-0] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-03 11:25:28.531  INFO 10692 --- [       runner-0] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-06-03 11:25:29.935  INFO 10692 --- [       runner-0] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2018-06-03 11:25:30.026  INFO 10692 --- [       runner-0] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2018-06-03 11:25:30.036  INFO 10692 --- [       runner-0] o.s.boot.SpringApplication               : Started application in 7.352 seconds (JVM running for 39.869)&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;快速创建一个新工程&amp;quot;&amp;gt;3. 快速创建一个新工程&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;如果在IDE中创建一个Spring新工程，大概至少需要四步，首先打开新建向导&amp;lt;code&amp;gt;Spring Starter Project&amp;lt;/code&amp;gt;，接着输入项目名称、包名，选择语言、类型等，然后选择工程依赖，如Web、Thymeleaf、DevTools等，最后检查并确定。这的确太繁琐了，如果还得做好几遍的话。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;但是这些使用Spring Boot CLI就能轻轻松松完成，打开控制台，输入下面这段命令即可：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ spring init --name hello-world --artifactId hello-world --groupId org.springbooks --language java --boot-version 1.5.13.RELEASE --type maven-project --dependencies web,thymeleaf,devtools --extract&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;这的确是很简单，对于我们只要记住一些常用的命令参数而已：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;对于&amp;lt;code&amp;gt;spring init&amp;lt;/code&amp;gt;的参数，有以下几个：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;table class=&amp;quot;tableblock frame-all grid-all stretch&amp;quot;&amp;gt; 
   &amp;lt;colgroup&amp;gt; 
    &amp;lt;col&amp;gt; 
    &amp;lt;col&amp;gt; 
    &amp;lt;col&amp;gt; 
   &amp;lt;/colgroup&amp;gt; 
   &amp;lt;thead&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;th class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;参数&amp;lt;/th&amp;gt; 
     &amp;lt;th class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;说明&amp;lt;/th&amp;gt; 
     &amp;lt;th class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;默认值&amp;lt;/th&amp;gt; 
    &amp;lt;/tr&amp;gt; 
   &amp;lt;/thead&amp;gt; 
   &amp;lt;tbody&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;name&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;项目的名称&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;demo&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;packageName&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;项目的包名&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;com.example.demo&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;description&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;项目的描述&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Demo project for Spring Boot&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;artifactId&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;项目的构件名称&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;demo&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;groupId&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;项目的组织名称&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;com.example&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;javaVersion&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Java语言的版本&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;1.8&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;language&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;可以选择语言，java、groovy、kotlin&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;java&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;packaging&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;项目打包类型，可选择：jar、war&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;jar&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;type&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;项目类型，可选择：maven-project，maven-build，gradle-project，gradle-build&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;maven-project&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;version&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;项目的版本号&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;0.0.1-SNAPSHOT&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;bootVersion&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Spring Boot的版本&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;默认是安装的版本，如：2.0.3.RELEASE&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
   &amp;lt;/tbody&amp;gt; 
  &amp;lt;/table&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;其中大部分参数都有默认值，可以省略暂时不填写。对于&amp;lt;code&amp;gt;dependencies&amp;lt;/code&amp;gt;，可以通过以下命令来获取：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ spring init --list&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;对于常用的一些依赖模块，详见下面的表格：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;table class=&amp;quot;tableblock frame-all grid-all stretch&amp;quot;&amp;gt; 
   &amp;lt;colgroup&amp;gt; 
    &amp;lt;col&amp;gt; 
    &amp;lt;col&amp;gt; 
   &amp;lt;/colgroup&amp;gt; 
   &amp;lt;thead&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;th class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;名称&amp;lt;/th&amp;gt; 
     &amp;lt;th class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;说明&amp;lt;/th&amp;gt; 
    &amp;lt;/tr&amp;gt; 
   &amp;lt;/thead&amp;gt; 
   &amp;lt;tbody&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;actuator&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Production ready features to help you monitor and manage your application&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;aop&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Create your own Aspects using Spring AOP and AspectJ&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;cache&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Spring’s Cache abstraction&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;data-jpa&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Java Persistence API including spring-data-jpa, spring-orm and Hibernate&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;data-mongodb&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;MongoDB NoSQL Database, including spring-data-mongodb&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;data-redis&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Redis key-value data store, including spring-data-redis&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;devtools&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Spring Boot Development Tools&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;flyway&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Flyway Database Migrations library&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;freemarker&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;FreeMarker templating engine&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;mybatis&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Persistence support using MyBatis&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;mysql&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;MySQL JDBC driver&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;security&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Secure your application via spring-security&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;thymeleaf&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Thymeleaf templating engine&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
    &amp;lt;tr&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;web&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
     &amp;lt;td class=&amp;quot;tableblock halign-left valign-top&amp;quot;&amp;gt;&amp;lt;p class=&amp;quot;tableblock&amp;quot;&amp;gt;Full-stack web development with Tomcat and Spring MVC&amp;lt;/p&amp;gt;&amp;lt;/td&amp;gt; 
    &amp;lt;/tr&amp;gt; 
   &amp;lt;/tbody&amp;gt; 
  &amp;lt;/table&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    举个例子：通过CLI创建新项目
   &amp;lt;/div&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ spring init --name hello-world --artifactId hello-world --groupId org.springbooks --language java --boot-version 1.5.13.RELEASE --type maven-project --dependencies web,thymeleaf,devtools --extract&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;我们继续来看，创建的项目目录如下：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;├── mvnw
├── mvnw.cmd
├── pom.xml
└── src
    ├── main
    │&amp;amp;nbsp;&amp;amp;nbsp; ├── java
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp; └── org
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;     └── springbooks
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;         └── helloworld
    │&amp;amp;nbsp;&amp;amp;nbsp; │&amp;amp;nbsp;&amp;amp;nbsp;             └── HelloWorldApplication.java
    │&amp;amp;nbsp;&amp;amp;nbsp; └── resources
    │&amp;amp;nbsp;&amp;amp;nbsp;     ├── application.properties
    │&amp;amp;nbsp;&amp;amp;nbsp;     ├── static
    │&amp;amp;nbsp;&amp;amp;nbsp;     └── templates
    └── test
        └── java
            └── org
                └── springbooks
                    └── helloworld
                        └── HelloWorldApplicationTests.java&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;一切就这么容易搞定，接下来看你的了。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>安装 Spring Boot CLI</title>
      <link>https://springdev.io/blog/2018/06/springboot.html</link>
      <pubDate>星期日, 3 六月 2018 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2018/06/springboot.html</guid>
      <description>&amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
 &amp;lt;div id=&amp;quot;toctitle&amp;quot;&amp;gt;
  目录
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#下载离线安装包手动安装&amp;quot;&amp;gt;1. 下载离线安装包手动安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用sdkman安装&amp;quot;&amp;gt;2. 使用SDKMAN安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用osx_homebrew安装&amp;quot;&amp;gt;3. 使用OSX Homebrew安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用scoop安装&amp;quot;&amp;gt;4. 使用Scoop安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock abstract&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    概要
   &amp;lt;/div&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     本文主要介绍Spring Boot的多种安装方式。 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Spring Boot CLI 是一个快速创建原型项目的命令行工具。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;下载离线安装包手动安装&amp;quot;&amp;gt;1. 下载离线安装包手动安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;下载 &amp;lt;a href=&amp;quot;https://repo.spring.io/release/org/springframework/boot/spring-boot-cli/1.5.13.RELEASE/spring-boot-cli-1.5.13.RELEASE-bin.zip&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Spring Boot CLI安装包&amp;lt;/a&amp;gt;，然后解压到本地目录并设置好&amp;lt;code&amp;gt;Path&amp;lt;/code&amp;gt;环境变量即可。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;使用sdkman安装&amp;quot;&amp;gt;2. 使用SDKMAN安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://sdkman.io&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;SDKMAN&amp;lt;/a&amp;gt;是一个JVM上各种语言SDK和工具包的安装管理工具，它的前身是GVM。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ sdk install springboot
$ spring --version
Spring Boot v1.5.13.RELEASE&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;使用osx_homebrew安装&amp;quot;&amp;gt;3. 使用OSX Homebrew安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://brew.sh&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Homebrew&amp;lt;/a&amp;gt;是专为macOS系统设计的软件包安装管理工具。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在终端控制台上执行下面的命令来安装Spring Boot：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ brew tap pivotal/tap
$ brew install springboot&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;使用scoop安装&amp;quot;&amp;gt;4. 使用Scoop安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://scoop.sh&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Scoop&amp;lt;/a&amp;gt;是使用PowerShell语言为Windows系统开发的一个命令行的安装管理工具，功能与OSX Homebrew类似。 Scoop的详细安装请参考 &amp;lt;a href=&amp;quot;https://github.com/lukesampson/scoop/wiki/Quick-Start&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;官方安装说明&amp;lt;/a&amp;gt;。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在命令行窗口执行下面的命令来安装Spring Boot如下：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;&amp;amp;gt; scoop bucket add extras
&amp;amp;gt; scoop install springboot&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;安装之后，检查下安装是否正确：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ spring --version
Spring Boot v1.5.13.RELEASE&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>安装 Maven</title>
      <link>https://springdev.io/blog/2018/06/maven.html</link>
      <pubDate>星期六, 2 六月 2018 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2018/06/maven.html</guid>
      <description>&amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
 &amp;lt;div id=&amp;quot;toctitle&amp;quot;&amp;gt;
  目录
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#下载离线安装包手动安装&amp;quot;&amp;gt;1. 下载离线安装包手动安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用sdkman安装&amp;quot;&amp;gt;2. 使用SDKMAN安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用osx_homebrew安装&amp;quot;&amp;gt;3. 使用OSX Homebrew安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用scoop安装&amp;quot;&amp;gt;4. 使用Scoop安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock abstract&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    概要
   &amp;lt;/div&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     本文主要介绍Maven的多种安装方式。 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;Maven是一个Java平台上非常流行的项目构建和管理工具，支持项目的编译、打包、测试、第三方依赖包管理，在很多知名的开源项目和企业中使用。同时也能和Ant进行集成，保证一些使用Ant的旧项目能够顺利迁移，同时也可以提供一些比较灵活性。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;下载离线安装包手动安装&amp;quot;&amp;gt;1. 下载离线安装包手动安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;当前使用的版本是3.5.2，去&amp;lt;a href=&amp;quot;http://maven.apache.org/download.cgi&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Maven官方&amp;lt;/a&amp;gt;下载 &amp;lt;a href=&amp;quot;https://archive.apache.org/dist/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.zip&amp;quot;&amp;gt;apache-maven-3.5.2-bin.zip&amp;lt;/a&amp;gt; 或者 &amp;lt;a href=&amp;quot;https://archive.apache.org/dist/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz&amp;quot;&amp;gt;apache-maven-3.5.2-bin.tar.gz&amp;lt;/a&amp;gt;，然后解压到本地目录并设置好&amp;lt;code&amp;gt;M2_HOME&amp;lt;/code&amp;gt;和&amp;lt;code&amp;gt;Path&amp;lt;/code&amp;gt;环境变量即可。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;使用sdkman安装&amp;quot;&amp;gt;2. 使用SDKMAN安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://sdkman.io&amp;quot;&amp;gt;SDKMAN&amp;lt;/a&amp;gt;是一个JVM上各种语言SDK和工具包的安装管理工具，它的前身是GVM。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ sdk install maven&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;使用osx_homebrew安装&amp;quot;&amp;gt;3. 使用OSX Homebrew安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://brew.sh&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Homebrew&amp;lt;/a&amp;gt;是专为macOS系统设计的软件包安装管理工具。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在终端控制台上执行下面的命令来安装Maven：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ brew install maven&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;使用scoop安装&amp;quot;&amp;gt;4. 使用Scoop安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;https://scoop.sh&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Scoop&amp;lt;/a&amp;gt;是使用PowerShell语言为Windows系统开发的一个命令行的安装管理工具，功能与OSX Homebrew类似。 Scoop的详细安装请参考 &amp;lt;a href=&amp;quot;https://github.com/lukesampson/scoop/wiki/Quick-Start&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;官方安装说明&amp;lt;/a&amp;gt;。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;在命令行窗口执行下面的命令来安装Maven如下：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ scoop install maven&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;安装之后，检查下安装是否正确：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ mvn --version
Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item><item>
      <title>安装 Java SDK 8</title>
      <link>https://springdev.io/blog/2018/06/jdk.html</link>
      <pubDate>星期五, 1 六月 2018 00:00:00 +0800</pubDate>
      <guid isPermaLink="false">blog/2018/06/jdk.html</guid>
      <description>&amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;toc&amp;quot;&amp;gt; 
 &amp;lt;div id=&amp;quot;toctitle&amp;quot;&amp;gt;
  目录
 &amp;lt;/div&amp;gt; 
 &amp;lt;ul class=&amp;quot;sectlevel1&amp;quot;&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#在oracle官方下载安装程序&amp;quot;&amp;gt;1. 在Oracle官方下载安装程序&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#使用sdkman_安装&amp;quot;&amp;gt;2. 使用SDKMAN 安装&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; 
 &amp;lt;/ul&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div id=&amp;quot;preamble&amp;quot;&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;quoteblock abstract&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt;
    概要
   &amp;lt;/div&amp;gt; 
   &amp;lt;blockquote&amp;gt;
     本文主要讲述如何安装JDK 8。 
   &amp;lt;/blockquote&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;在oracle官方下载安装程序&amp;quot;&amp;gt;1. 在Oracle官方下载安装程序&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;打开浏览器，在Oracle网站，通过&amp;lt;a href=&amp;quot;http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;Java 8 下载页面&amp;lt;/a&amp;gt;来下载使用操作系统对应的安装程序。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;ulist&amp;quot;&amp;gt; 
   &amp;lt;ul&amp;gt; 
    &amp;lt;li&amp;gt; &amp;lt;p&amp;gt;在Windows系统上安装&amp;lt;/p&amp;gt; &amp;lt;/li&amp;gt; 
   &amp;lt;/ul&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;运行安装程序jdk-8u172-windows-x64.exe，根据向导设置并下一步，记得将安装路径修改为 C:\\Java\jdk1.8.0，因为在Windows系统下，Java的安装路径最好不要包括空格。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;admonitionblock note&amp;quot;&amp;gt; 
   &amp;lt;table&amp;gt; 
    &amp;lt;tbody&amp;gt;
     &amp;lt;tr&amp;gt; 
      &amp;lt;td class=&amp;quot;icon&amp;quot;&amp;gt; &amp;lt;i class=&amp;quot;fa icon-note&amp;quot; title=&amp;quot;Note&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/td&amp;gt; 
      &amp;lt;td class=&amp;quot;content&amp;quot;&amp;gt; 
       &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
        &amp;lt;p&amp;gt;JAVA_HOME 环境变量必须正确配置。 可以通过右键单击我的电脑，选择属性菜单，然后在高级页签中选择环境变量。添加环境变量 JAVA_HOME即可。&amp;lt;/p&amp;gt; 
       &amp;lt;/div&amp;gt; &amp;lt;/td&amp;gt; 
     &amp;lt;/tr&amp;gt; 
    &amp;lt;/tbody&amp;gt;
   &amp;lt;/table&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt; 
&amp;lt;div class=&amp;quot;sect1&amp;quot;&amp;gt; 
 &amp;lt;h2 id=&amp;quot;使用sdkman_安装&amp;quot;&amp;gt;2. 使用SDKMAN 安装&amp;lt;/h2&amp;gt; 
 &amp;lt;div class=&amp;quot;sectionbody&amp;quot;&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://sdkman.io&amp;quot; class=&amp;quot;external&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener&amp;quot;&amp;gt;SDKMAN&amp;lt;/a&amp;gt;是一个JVM上各种语言SDK和工具包的安装管理工具，提供了一些常用SDK的安装和升级功能，类似Ruby的&amp;lt;strong&amp;gt;RVM&amp;lt;/strong&amp;gt;或NodeJS下的nvm，可以同时安装多个版本并支持随时切换使用。支持Java、Scala、Kotlin、Groovy、Grails、Ant、Maven、Gradle等流行SDK和工具。&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ sdk i java 8.0.172-zulu&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;paragraph&amp;quot;&amp;gt; 
   &amp;lt;p&amp;gt;安装完并配置好环境变量后，可以测试下是否成功，打开一个控制台窗口，输入如下命令：&amp;lt;/p&amp;gt; 
  &amp;lt;/div&amp;gt; 
  &amp;lt;div class=&amp;quot;listingblock&amp;quot;&amp;gt; 
   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 
    &amp;lt;pre&amp;gt;$ java version
openjdk version &amp;quot;1.8.0_172&amp;quot;
OpenJDK Runtime Environment (Zulu 8.30.0.1-win64) (build 1.8.0_172-b01)
OpenJDK 64-Bit Server VM (Zulu 8.30.0.1-win64) (build 25.172-b01, mixed mode)&amp;lt;/pre&amp;gt; 
   &amp;lt;/div&amp;gt; 
  &amp;lt;/div&amp;gt; 
 &amp;lt;/div&amp;gt; 
&amp;lt;/div&amp;gt;</description>	  
    </item>

  </channel> 
</rss>
